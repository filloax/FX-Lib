on:
  workflow_dispatch:
  push:
    branches:
      - 'release/1.20.6'

#Environment variables that can later be referenced using ${{ env.MINECRAFT_VERSION }}. These are useful for repeating information and allow for quick changes for new mod updates
env: 
  JAVA_VERSION: 21                   
  # RELEASE_NAME: FxLib
  GITHUB_TOKEN: "${{ secrets.PUBLISH_GITHUB_TOKEN }}"
  MINECRAFT_VERSION: 1.20.6

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
      
    # - name: Create Release (Jitpack Source)
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.PUBLISH_GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
    #   with:
    #     tag_name: ${{ github.ref }}
    #     release_name: FxLib ${{ steps.get_version.outputs.VERSION }} (Sources)
    #     body: |
    #       Sources used in JitPack publishing.
    #     draft: false
    #     prerelease: false
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Make Gradle Wrapper Executable
      if: ${{ runner.os != 'Windows' }}
      run: chmod +x ./gradlew
        
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Get version from gradle
      id: get_version
      run: echo "VERSION=$(./gradlew modVersion | grep VERSION | awk -F'=' '{print $2}')" >> $GITHUB_OUTPUT

    - name: Build with Gradle
      run: ./gradlew build

    - name: Extract latest changelog
      id: changelog
      run: |
        latest_version=$(grep -m 1 -oP '(?<=##\s)\d+\.\d+\.\d+' CHANGELOG.md)
        latest_changelog=$(sed -n "/## $latest_version/,/## /p" CHANGELOG.md | sed '$d')
        echo "$latest_changelog" > latest_changelog.txt

    - name: Publish (Fabric)
      uses: softprops/action-gh-release@v2
      with:
        name: FxLib ${{ steps.get_version.outputs.VERSION }} - Fabric ${{ env.MC_VER }}
        body_path: latest_changelog.txt
        token: ${{ secrets.PUBLISH_GITHUB_TOKEN }}
        make_latest: false
        tag_name: "v${{ steps.get_version.outputs.VERSION }}-${{env.MINECRAFT_VERSION}}-fabric"
        files: |
          fabric/build/libs/*.jar
      
    - name: Publish (Common)
      uses: softprops/action-gh-release@v2
      with:
        name: FxLib ${{ steps.get_version.outputs.VERSION }} - Common ${{ env.MC_VER }}
        body_path: latest_changelog.txt
        token: ${{ secrets.PUBLISH_GITHUB_TOKEN }}
        make_latest: false
        tag_name: "v${{ steps.get_version.outputs.VERSION }}-${{env.MINECRAFT_VERSION}}-common"
        files: |
          base/build/libs/*.jar
